{"version":3,"sources":["components/StepNavigator/StepNavigator.js","components/ProgressBar/ProgressBar.js","wizard/createWizard.js","components/ChoiceList/Choice/Choice.js","components/ChoiceList/ChoiceList.js","components/Step/Step.js","components/CarShopView/CarShopView.js","components/Summary/Summary.js","containers/CarShopContainer/CarShopContainer.js","data/cars.js","components/App/App.js","serviceWorker.js","index.js"],"names":["StepContainer","styled","div","_templateObject","NextButton","button","_templateObject2","props","disabled","PreviousButton","_templateObject3","StepNavigator","_ref","goToNextStep","goToPreviousStep","isNextButtonDisabled","isPreviousButtonVisible","isNextButtonVisible","react_default","a","createElement","onClick","Progress","ProgressBar_templateObject","Filter","attrs","percent","style","width","concat","ProgressBar_templateObject2","ProgressBar","Form","form","createWizard_templateObject","StepsView","createWizard_templateObject2","StepTitle","createWizard_templateObject3","createWizard","steps","StepView","Summary","_Component","_class2","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","create","stepIndex","isSummary","bind","assertThisInitialized","onChange","inherits","createClass","key","value","newData","setState","objectSpread","nextStepIndex","dataProvider","length","nextStep","processStepData","event","preventDefault","goToStep","processedByNextStepData","_this$state","title","Fragment","assign","changeData","_this$state2","validate","components_ProgressBar_ProgressBar","renderSummary","renderStep","components_StepNavigator_StepNavigator","Component","ChoiceContainer","Choice_templateObject","selected","_ref2","_ref3","Choice","_this$props","choiceName","defineProperty","currentTarget","textContent","ChoiceListContainer","ChoiceList_templateObject","ChoiceList","choices","map","choice","Choice_Choice","selectedValue","choiceGroup","Step","components_ChoiceList_ChoiceList","CarShopView","components_Step_Step","brands","brand","models","model","fuelTypes","fuelType","transmissionTypes","transmissionType","SummaryContainer","Summary_templateObject","_ref$data","provider","includes","cars","Audi","BMW","A4","A5","A6","R8","TT","V8","F25 X3","X6","F30 3 Series","I12 i8","GlobalStyle","createGlobalStyle","App_templateObject","App","CarShopContainer","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b11fbfb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StepContainer = styled.div``;\r\n\r\nconst NextButton = styled.button`\r\n    padding: 10px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    background: ${props => props.disabled ? 'gray' : 'green'};\r\n    cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n    outline: none;\r\n    color: white;\r\n    margin: 20px;\r\n    width: 100px;\r\n    float: right;\r\n\r\n    &:hover {\r\n        background: ${props => props.disabled ? 'gray' : 'blue'};\r\n    }\r\n`;\r\n\r\nconst PreviousButton = styled.button`\r\n    padding: 10px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    background: green;\r\n    outline: none;\r\n    color: white;\r\n    margin: 20px;\r\n    width: 100px;\r\n    float: left;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background: blue;\r\n    }\r\n`;\r\n\r\nconst StepNavigator = ({goToNextStep, goToPreviousStep, isNextButtonDisabled, isPreviousButtonVisible, isNextButtonVisible}) => (\r\n    <StepContainer>\r\n        {isPreviousButtonVisible && <PreviousButton onClick={goToPreviousStep}>Previous</PreviousButton> }\r\n        {isNextButtonVisible && <NextButton disabled={isNextButtonDisabled} onClick={goToNextStep}>Next</NextButton> }\r\n    </StepContainer>\r\n);\r\n\r\nStepNavigator.propTypes = {\r\n    goToNextStep: PropTypes.func.isRequired,\r\n    goToPreviousStep: PropTypes.func.isRequired,\r\n    isNextButtonDisabled: PropTypes.bool.isRequired,\r\n    isNextButtonVisible: PropTypes.bool.isRequired,\r\n    isPreviousButtonVisible: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default StepNavigator;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Progress = styled.div`\r\n    width: 100%;\r\n    height: 40px;\r\n    position: relative;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    background: #555;\r\n    -moz-border-radius: 25px;\r\n    -webkit-border-radius: 25px;\r\n    border-radius: 25px;\r\n    box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\r\n`;\r\n\r\nconst Filter = styled.div.attrs(({ percent }) => ({\r\n    style: {\r\n        width: `${percent}%`,\r\n    },\r\n}))`\r\n    display: block;\r\n    height: 100%;\r\n    width: 0%;\r\n    border-radius: 25px;\r\n    background-color: rgb(43,194,83);\r\n    background-image: linear-gradient(\r\n    center bottom,\r\n    rgb(43,194,83) 37%,\r\n    rgb(84,240,84) 69%\r\n    );\r\n    box-shadow: \r\n    inset 0 2px 9px  rgba(255,255,255,0.3),\r\n    inset 0 -2px 6px rgba(0,0,0,0.4);\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: width 1s;\r\n`;\r\n\r\nconst ProgressBar = props => (\r\n    <Progress>\r\n        <Filter percent={props.percent}></Filter>\r\n    </Progress>\r\n);\r\n\r\nProgressBar.propTypes = {\r\n    percent: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ProgressBar;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport StepNavigator from '../components/StepNavigator';\r\nimport ProgressBar from '../components/ProgressBar';\r\n\r\nconst Form = styled.form`\r\n    display: inline-block;\r\n    width: 700px;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    padding-bottom: 30px;\r\n    margin: 20px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    margin-left: 250px;\r\n    margin-right: 250px;\r\n    box-shadow: 0 0 10px black;\r\n`;\r\n\r\nconst StepsView = styled.div`\r\n    height: 250px;\r\n    overflow: auto;\r\n`;\r\n\r\nconst StepTitle = styled.div`\r\n    text-align: center;\r\n    font-size: 30px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid black;\r\n    box-shadow: 0px 0px 10px  black; \r\n    transition: content 1s;\r\n`;\r\n\r\nconst createWizard = steps => {\r\n    return (StepView, Summary) => {\r\n        return class extends Component {\r\n            state = {\r\n                data: Object.create(null),\r\n                stepIndex: 0,\r\n                isSummary: false,\r\n            }\r\n\r\n            constructor(props) {\r\n                super(props);\r\n\r\n                this.goToNextStep = this.goToNextStep.bind(this);\r\n                this.goToPreviousStep = this.goToPreviousStep.bind(this);\r\n                this.onChange = this.onChange.bind(this);\r\n            }\r\n\r\n            onChange(newData) {\r\n                this.setState(({ data }) => ({\r\n                    data: {\r\n                        ...data,\r\n                        ...newData,\r\n                    },\r\n                }));\r\n            }\r\n\r\n            goToStep(nextStepIndex) {\r\n                const { dataProvider } = this.props;\r\n\r\n                if (nextStepIndex === steps.length) {\r\n                    return this.setState({\r\n                        stepIndex: nextStepIndex,\r\n                        isSummary: true,\r\n                    });\r\n                }\r\n\r\n                const nextStep = steps[nextStepIndex];\r\n                const newData = this.processStepData(nextStep, dataProvider);\r\n\r\n                return this.setState({\r\n                    data: newData,\r\n                    stepIndex: nextStepIndex,\r\n                    isSummary: false,\r\n                });\r\n            }\r\n\r\n            goToNextStep(event) {\r\n                event.preventDefault();\r\n                \r\n                this.goToStep(this.state.stepIndex + 1);\r\n            }\r\n\r\n            goToPreviousStep(event) {\r\n                event.preventDefault();\r\n                \r\n                this.goToStep(this.state.stepIndex - 1);\r\n            }\r\n\r\n            processStepData(nextStep) {\r\n                const { data } = this.state;\r\n                const { dataProvider } = this.props;\r\n                \r\n                if (!nextStep.processStepData) {\r\n                    return data;\r\n                }\r\n\r\n                const processedByNextStepData = nextStep.processStepData(data, dataProvider);\r\n\r\n                return { ...data, ...processedByNextStepData };\r\n            }\r\n\r\n            renderStep() {\r\n                const { data, stepIndex } = this.state;\r\n                const { title } = steps[stepIndex];\r\n                \r\n                return (\r\n                    <React.Fragment>\r\n                        <StepTitle>{title}</StepTitle>\r\n                        <StepsView>\r\n                            <StepView\r\n                                {...this.props}\r\n                                stepIndex={stepIndex}\r\n                                changeData={this.onChange}\r\n                                data={data}\r\n                            />\r\n                        </StepsView>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n\r\n            renderSummary() {\r\n                return (\r\n                    <Summary data={this.state.data} />\r\n                )\r\n            }\r\n\r\n            render() {\r\n                const { data, stepIndex, isSummary } = this.state;\r\n                const validate = isSummary ? false : steps[stepIndex].validate;\r\n                const isNextButtonDisabled = validate ? !validate(data) : false;\r\n\r\n                return (\r\n                    <Form>\r\n                        <ProgressBar percent={(100 * stepIndex)/(steps.length)} />\r\n                        {isSummary ? this.renderSummary() : this.renderStep()}\r\n                        <StepNavigator\r\n                            isNextButtonVisible={stepIndex !== steps.length}\r\n                            isPreviousButtonVisible={stepIndex > 0}\r\n                            isNextButtonDisabled={isNextButtonDisabled}\r\n                            goToNextStep={this.goToNextStep}\r\n                            goToPreviousStep={this.goToPreviousStep}\r\n                        />\r\n                    </Form>\r\n                );\r\n            }\r\n\r\n            static propTypes = {\r\n                dataProvider: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),     \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default createWizard;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ChoiceContainer = styled.div`\r\n    user-select: none;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid black;\r\n    cursor: pointer;\r\n    background: ${({ selected }) => (selected && 'green')};\r\n    color: ${({ selected }) => (selected && 'white')};\r\n\r\n    &:hover {\r\n        background: ${({ selected }) => (!selected && '#2196F3')};\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport default class Choice extends Component {\r\n    onClick = event => {\r\n        const { selected, choiceName, changeData } = this.props;\r\n\r\n        if (!selected) {\r\n            changeData({\r\n                [choiceName]: event.currentTarget.textContent,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ChoiceContainer onClick={this.onClick} selected={this.props.selected}>\r\n                {this.props.value}\r\n            </ChoiceContainer>\r\n        )\r\n    }\r\n\r\n    static propTypes = {\r\n        selected: PropTypes.bool.isRequired,\r\n        choiceName: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Choice from './Choice';\r\n\r\nconst ChoiceListContainer = styled.div`\r\n`;\r\n\r\nconst ChoiceList = props => (\r\n    <ChoiceListContainer>\r\n        {props.choices.map(choice => (\r\n            <Choice\r\n                selected={choice === props.selectedValue}\r\n                value={choice}\r\n                key={choice}\r\n                choiceName={props.choiceGroup}\r\n                changeData={props.changeData}\r\n            />\r\n        ))}\r\n    </ChoiceListContainer>\r\n);\r\n\r\nChoiceList.propTypes = {\r\n    choiceGroup: PropTypes.string.isRequired,\r\n    choices: PropTypes.array.isRequired,\r\n    changeData: PropTypes.func.isRequired,\r\n    selectedValue: PropTypes.string,\r\n};\r\n\r\nexport default ChoiceList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChoiceList from '../ChoiceList';\r\n\r\nconst Step = props => (\r\n    <ChoiceList \r\n        choiceGroup={props.choiceGroup}\r\n        choices={props.choices}\r\n        changeData={props.changeData}\r\n        selectedValue={props.selectedValue}\r\n    />\r\n);\r\n\r\nStep.propTypes = {\r\n    choices: PropTypes.array.isRequired,\r\n    changeData: PropTypes.func.isRequired,\r\n    choiceGroup: PropTypes.string.isRequired,\r\n    selectedValue: PropTypes.string,\r\n}\r\n\r\nexport default Step;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Step from '../Step';\r\n\r\nconst CarShopView = ({ stepIndex, changeData, dataProvider, data }) => {\r\n    if (stepIndex === 0) {\r\n        return (\r\n            <Step\r\n                choiceGroup=\"brand\"\r\n                changeData={changeData}\r\n                choices={dataProvider.brands}\r\n                selectedValue={data.brand}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (stepIndex === 1) {\r\n        return (\r\n            <Step\r\n                choiceGroup=\"model\"\r\n                changeData={changeData}\r\n                choices={dataProvider.models[data.brand]}\r\n                selectedValue={data.model}\r\n            />\r\n        )\r\n    }\r\n\r\n    if (stepIndex === 2) {\r\n        return (\r\n            <Step\r\n                choiceGroup=\"fuelType\"\r\n                changeData={changeData}\r\n                choices={dataProvider.fuelTypes[data.brand][data.model]}\r\n                selectedValue={data.fuelType}\r\n            />\r\n        )\r\n    }\r\n\r\n    if (stepIndex === 3) {\r\n        return (\r\n            <Step\r\n                choiceGroup=\"transmissionType\"\r\n                changeData={changeData}\r\n                choices={dataProvider.transmissionTypes[data.brand][data.model]}\r\n                selectedValue={data.transmissionType}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nCarShopView.propTypes = {\r\n    changeData: PropTypes.func.isRequired,\r\n    dataProvider: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    data: PropTypes.object.isRequired,\r\n    stepIndex: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default CarShopView;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst SummaryContainer = styled.div`\r\n    font-size: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Summary = ({ data: { brand, model, fuelType, transmissionType }}) => (\r\n    <SummaryContainer>\r\n        <h2>Your order in process</h2>\r\n        <div>Brand: {brand}</div>\r\n        <div>Model: {model}</div>\r\n        <div>Fuel Type: {fuelType}</div>\r\n        <div>Transmission Type: {transmissionType}</div>\r\n    </SummaryContainer>\r\n)\r\n\r\nSummary.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Summary;","import createWizard from '../../wizard/createWizard';\r\nimport CarShopView from '../../components/CarShopView';\r\nimport Summary from '../../components/Summary';\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Brands',\r\n        validate: data => !!data.brand,\r\n    },\r\n    {\r\n        title: 'Models',\r\n        processStepData: (data, provider) => {\r\n            const { model, brand } = data;\r\n            if (!provider.models[brand].includes(model)) {\r\n                return { model: null };\r\n            }\r\n        },\r\n        validate: data => !!data.model,\r\n    },\r\n    {\r\n        title: 'Fuel Types',\r\n        processStepData: (data, provider) => {\r\n            const { model, brand, fuelType } = data;\r\n\r\n            if (!provider.fuelTypes[brand][model].includes(fuelType)) {\r\n                return { fuelType: null };\r\n            }\r\n        },\r\n        validate: data => !!data.fuelType,\r\n    },\r\n    {\r\n        title: 'Transmission Types',\r\n        processStepData: (data, provider) => {\r\n            const { model, brand, fuelType } = data;\r\n            \r\n            if (!provider.fuelTypes[brand][model].includes(fuelType)) {\r\n                return { transmissionType: null };\r\n            }\r\n        },\r\n        validate: data => !!data.transmissionType,\r\n    },\r\n]\r\n\r\nexport default createWizard(steps)(CarShopView, Summary);","const cars = {\r\n    brands: ['Audi', 'BMW'],\r\n    models: {\r\n        'Audi': ['A4', 'A5', 'A6', 'R8', 'TT', 'V8'],\r\n        'BMW': ['F25 X3', 'X6', 'F30 3 Series', 'I12 i8']\r\n    },\r\n    fuelTypes: {\r\n        'Audi': {\r\n            'A4': ['Biofuel', 'Diesel'],\r\n            'A5': ['Gas', 'Biofuel'],\r\n            'A6': ['Gas', 'Diesel'],\r\n            'R8': ['Gas', 'Diesel', 'Biofuel'],\r\n            'TT': ['Diesel', 'Electric'],\r\n            'V8': ['Gas', 'Diesel'],\r\n        },\r\n        'BMW': {\r\n            'F25 X3': ['Diesel', 'Biofuel'],\r\n            'X6': ['Gas', 'Diesel'],\r\n            'F30 3 Series': ['Diesel', 'Electric'],\r\n            'I12 i8': ['Biofuel', 'Electric'],\r\n        }\r\n    },\r\n    transmissionTypes: {\r\n        'Audi': {\r\n            'A4': ['Automatic Transmission', 'Manual Transmission'],\r\n            'A5': ['Automatic Transmission', 'Manual Transmission'],\r\n            'A6': ['Automatic Transmission'],\r\n            'R8': ['Automatic Transmission', 'Manual Transmission', 'Automated Manual Transmission'],\r\n            'TT': ['Automatic Transmission', 'Automated Manual Transmission'],\r\n            'V8': ['Manual Transmission', 'Automated Manual Transmission'],\r\n        },\r\n        'BMW': {\r\n            'F25 X3': ['Automatic Transmission', 'Manual Transmission'],\r\n            'X6': ['Automatic Transmission', 'Automated Manual Transmission'],\r\n            'F30 3 Series': ['Automatic Transmission', 'Automated Manual Transmission'],\r\n            'I12 i8': ['Manual Transmission', 'Automated Manual Transmission'],\r\n        },\r\n    },\r\n}\r\n\r\nexport default cars;","import React from 'react';\r\nimport CarShopContainer from '../../containers/CarShopContainer';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport cars from '../../data/cars';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body {\r\n        margin: 0px;\r\n        padding: 0px;\r\n    }\r\n`;\r\n\r\nconst App = () => (\r\n    <React.Fragment>\r\n        <GlobalStyle />\r\n        <CarShopContainer dataProvider={cars} />\r\n    </React.Fragment>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}